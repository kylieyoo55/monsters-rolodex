{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/seach-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","mon","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAKaA,EAAM,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACA,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEA,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCPbC,G,MAAU,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAC,GAAG,OAClB,cAAC,EAAD,CAAmBP,QAASO,GAAjBA,EAAIN,WCPfO,G,YAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBACAb,UAAU,SACVc,KAAK,SACJF,YAAaA,EACZG,SAAUF,MCoCDG,E,kDApCb,aAAc,IAAD,8BACX,gBAEKC,MAAO,CACVT,SAAU,GAEVU,YAAa,IANJ,E,qDAUb,WAAoB,IAAD,OACjBC,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAAChB,SAASe,S,oBAGtC,WAAS,IAAD,SACuBE,KAAKR,MAA9BT,EADE,EACFA,SAAUU,EADR,EACQA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAjB,GAAG,OAC1CA,EAAIL,KAAKuB,cAAcC,SAASX,EAAYU,kBAE1C,OACE,sBAAK5B,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACCY,YAAY,kBACVC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAExD,cAAC,EAAD,CAAUxB,SAAUkB,W,GA9BRO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32b281d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n\r\n\r\nexport const Card =(props)=>(\r\n    <div className='card-container'>\r\n    <img\r\n     alt='monster' \r\n     src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n      />\r\n        <h2 >{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList =props=>(\r\n    \r\n   <div className='card-list'>\r\n        {\r\n         props.monsters.map(mon=>(\r\n             <Card key={mon.id} monster={mon}/>\r\n          \r\n          ))\r\n        }\r\n    </div>)","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox =({placeholder,handleChange})=>(\r\n    <input \r\n    className='search'\r\n    type='search'\r\n     placeholder={placeholder}\r\n      onChange={handleChange}\r\n      \r\n      />\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\n\nimport './App.css';\nimport { SearchBox } from './components/search-box/seach-box.component';\n\nclass App extends Component{\n\n  constructor(){\n    super();\n\n    this.state ={\n      monsters: [\n      ],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').\n    then(response =>response.json())\n    .then(user=>this.setState({monsters:user}));\n  }\n\n  render(){\nconst { monsters, searchField } =this.state;\nconst filteredMonsters = monsters.filter(mon =>\n  mon.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n      <h1>Monsters rolodex</h1>\n      <SearchBox\n       placeholder='Search monsters' \n         handleChange={e=>this.setState({searchField:e.target.value})}\n       />\n      <CardList monsters={filteredMonsters}/> \n       \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}